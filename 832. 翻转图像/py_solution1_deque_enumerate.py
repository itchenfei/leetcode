# 给定一个二进制矩阵A，我们想先水平翻转图像，然后反转图像并返回结果。
#
# 水平翻转图片就是将图片的每一行都进行翻转，即逆序。例如，水平翻转[1, 1, 0]的结果是[0, 1, 1]。
#
# 反转图片的意思是图片中的0全部被1替换，1全部被0替换。例如，反转[0, 1, 1]的结果是[1, 0, 0]。

# 输入：[[1,1,0],[1,0,1],[0,0,0]]
# 输出：[[1,0,0],[0,1,0],[1,1,1]]
# 解释：首先翻转每一行: [[0,1,1],[1,0,1],[0,0,0]]；
#      然后反转图片: [[1,0,0],[0,1,0],[1,1,1]]

# 输入：[[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]
# 输出：[[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
# 解释：首先翻转每一行: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]]；
#      然后反转图片: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]

# 1 <= A.length = A[0].length <= 20
# 0 <= A[i][j] <= 1

from collections import deque


def flip_and_invert_image(A):
    res = []
    for a in A:
        cache = deque()
        for k, n in enumerate(a):
            n = 0 if n else 1
            cache.appendleft(n)
        res.append(list(cache))
    return res


if __name__ == '__main__':
    _A = [[1,1,0],[1,0,1],[0,0,0]]
    ret = flip_and_invert_image(_A)
    print(ret)
